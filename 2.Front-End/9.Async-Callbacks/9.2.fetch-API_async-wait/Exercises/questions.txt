>O que é um código que é executado de modo assíncrono? Qual é a diferença disso para um código que é executado de modo síncrono?
- o código de modo sincrono, é executado em ordem, linha a linha, o de forma asincrona não, no momento que é encontrada uma flag asincrona, ele começa a processar em paralelo com o restante do código e já retorna quando totalmente processado.

>Quando você tem que enfileirar várias callbacks, que problema surge?
- callback hell, que é quando se torna inviavel realizar manutenção do codigo, visto a quantidade de callbacks que existe dentro do código para criar um asincronismo meio que na força bruta

>Por que as Promises são uma forma de resolver esse problema?
- pois as promises são constructors que são assincronos e gerenciaveis. são praticamente funções asincronas que tem poderes extras para controle de fluxo.

>Quando você vai se comunicar com uma API, tal comunicação deve ser síncrona ou assíncrona? Lembre-se de que o serviço ao qual você está se conectando pode demorar muito ou pouco para dar retorno, pode estar fora do ar etc.
- asincrona, existem variaveis que inibem você conseguir garantir que a api vai vir no momento que você quer.

>Dada a resposta anterior, o que é fetch e para que ele serve?
é uma série de recursos para lidar com requisições http, trata-se de funções assíncronas baseada em uma promise