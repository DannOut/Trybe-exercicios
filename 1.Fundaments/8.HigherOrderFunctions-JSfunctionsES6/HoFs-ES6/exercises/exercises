const books = [
  {
    id: 1,
    name: 'As Crônicas de Gelo e Fogo',
    genre: 'Fantasia',
    author: {
      name: 'George R. R. Martin',
      birthYear: 1948,
    },
    releaseYear: 1991,
  },
  {
    id: 2,
    name: 'O Senhor dos Anéis',
    genre: 'Fantasia',
    author: {
      name: 'J. R. R. Tolkien',
      birthYear: 1892,
    },
    releaseYear: 1954,
  },
  {
    id: 3,
    name: 'Fundação',
    genre: 'Ficção Científica',
    author: {
      name: 'Isaac Asimov',
      birthYear: 1920,
    },
    releaseYear: 1951,
  },
  {
    id: 4,
    name: 'Duna',
    genre: 'Ficção Científica',
    author: {
      name: 'Frank Herbert',
      birthYear: 1920,
    },
    releaseYear: 1965,
  },
  {
    id: 5,
    name: 'A Coisa',
    genre: 'Terror',
    author: {
      name: 'Stephen King',
      birthYear: 1947,
    },
    releaseYear: 1986,
  },
  {
    id: 6,
    name: 'O Chamado de Cthulhu',
    genre: 'Terror',
    author: {
      name: 'H. P. Lovecraft',
      birthYear: 1890,
    },
    releaseYear: 1928,
  },
];
// Adicione o código do exercício aqui:
//Q01
function authorBornIn1947Method1() {
  teste = books.find((number) => number.author.birthYear === 1947);
  return teste.author.name;
}
const authorBornIn1947Method2 = () =>
  books.find((number) => number.author.birthYear === 1947).author.name;
// console.log(authorBornIn1947Method1());
// console.log(authorBornIn1947Method2());

/* ------------------------------------------------------------- */
//Q02
function smallerName() {
  let nameBook;
  books.forEach((book) =>
    !nameBook || book.name.length < nameBook.length
      ? (nameBook = book.name)
      : null
  );
  // Variável nameBook que receberá o valor do menor nome;
  return nameBook;
}
// console.log(smallerName());

/* ------------------------------------------------------------- */
// Q03
const getNamedBook = () => books.find((book) => book.name.length === 26);
// console.log(getNamedBook());

/* ------------------------------------------------------------- */
//Q04
function booksOrderedByReleaseYearDesc() {
  return books.sort((a, b) => b.releaseYear - a.releaseYear);
}
// console.log(booksOrderedByReleaseYearDesc());

/* ------------------------------------------------------------- */
//Q05
// const expectedResult = false;

function everyoneWasBornOnSecXX() {
  return books.every((book) => {
    return book.author.birthYear > 1900 && book.author.birthYear <= 2000;
  });
}
// console.log(everyoneWasBornOnSecXX());

//Q06
// const expectedResult = true;
function someBookWasReleaseOnThe80s() {
  return books.some(
    (book) => book.releaseYear > 1990 && book.releaseYear <= 2000
  );
}
/* console.log(someBookWasReleaseOnThe80s()); */

//Q07
// const expectedResult = false;
// Faça uma função que retorne true, caso nenhum author tenha nascido no mesmo ano, e false, caso contrário.
function authorUnique() {
  // escreva seu código aqui
  return books.every((book) =>
    !books.some((bookSome) => {
     return bookSome.author.birthYear === book.author.birthYear &&
        bookSome.author.name !== book.author.name;
    })
  );
}

console.log(authorUnique());
